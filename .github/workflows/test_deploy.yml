name: Build Test

on:
  push:
    branches: 
      - "master" 
      - "feat#55-continuous-deploy"
  pull_request:
    branches: 
      - "master" 
      

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
    - name: Checkout code            # 내 코드 체크아웃
      uses: actions/checkout@v4      # 체크아웃 actions 사용

    - name: Set up JDK
      uses: actions/setup-java@v3    # JDK setup actoins 사용
      with:
        java-version: '17'    # 자신의 프로젝트에 맞는 Java 버전으로 변경
        distribution: 'zulu'
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew  # gradlew 명령어 실행 권한 부여
    - name: Build with Gradle
      env:
     
        AUTH_JWT_ISSUER: ${{secrets.AUTH_JWT_ISSUER}}
        AUTH_JWT_ACCESSTOKENSECRET: ${{secrets.AUTH_JWT_ACCESSTOKENSECRET}}
        AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR: ${{secrets.AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR}}

        OAUTH2_NAVER_CLIENT_ID: ${{secrets.OAUTH2_NAVER_CLIENT_ID}}
        OAUTH2_NAVER_CLIENT_SECRET: ${{secrets.OAUTH2_NAVER_CLIENT_SECRET}}
        OAUTH2_NAVER_REDIRECT_URL: ${{secrets.OAUTH2_NAVER_REDIRECT_URL}}
        OAUTH2_NAVER_AUTH_SERVER_BASE_URL: ${{secrets.OAUTH2_NAVER_AUTH_SERVER_BASE_URL}}
        OAUTH2_NAVER_RESOURCE_SERVER_BASE_URL: ${{secrets.OAUTH2_NAVER_RESOURCE_SERVER_BASE_URL}}
        
        OAUTH2_GOOGLE_CLIENT_ID: ${{secrets.OAUTH2_GOOGLE_CLIENT_ID}}
        OAUTH2_GOOGLE_CLIENT_SECRET: ${{secrets.OAUTH2_GOOGLE_CLIENT_SECRET}}
        OAUTH2_GOOGLE_REDIRECT_URL: ${{secrets.OAUTH2_GOOGLE_REDIRECT_URL}}
        OAUTH2_GOOGLE_AUTH_SERVER_BASE_URL: ${{secrets.OAUTH2_GOOGLE_AUTH_SERVER_BASE_URL}}
        OAUTH2_GOOGLE_RESOURCE_SERVER_BASE_URL: ${{secrets.OAUTH2_GOOGLE_RESOURCE_SERVER_BASE_URL}}
        OAUTH2_GOOGLE_TOKEN_SERVER_BASE_URL: ${{secrets.OAUTH2_GOOGLE_TOKEN_SERVER_BASE_URL}}
        
        CLOUD_AWS_S3_BUCKET: ${{secrets.CLOUD_AWS_S3_BUCKET}}
        CLOUD_AWS_CREDENTIALS_ACCESSKEY: ${{secrets.CLOUD_AWS_CREDENTIALS_ACCESSKEY}}
        CLOUD_AWS_CREDENTIALS_SECRETKEY: ${{secrets.CLOUD_AWS_CREDENTIALS_SECRETKEY}}
        CLOUD_AWS_REGION_STATIC: ${{secrets.CLOUD_AWS_REGION_STATIC}}
        
        COOLSMS_API_KEY: ${{secrets.COOLSMS_API_KEY}}
        COOLSMS_API_SECRET: ${{secrets.COOLSMS_API_SECRET}}
        COOLSMS_API_DOMAIN: ${{secrets.COOLSMS_API_DOMAIN}}
        COOLSMS_FROMNUMBER: ${{secrets.COOLSMS_FROMNUMBER}}

        DATA_REDIS_HOST: ${{secrets.DATA_REDIS_HOST}}
        DATA_REDIS_PORT: ${{secrets.DATA_REDIS_PORT}}

      uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.6.0
      with:
        arguments: build bootJar

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}

    - name: Build and Push Docker image
      run: |
        docker build -t seungheyon/myfirsthub .
        docker push seungheyon/myfirsthub


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Transfer docker-compose.yml to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SH_SSH_HOST }}
        username: ec2-user
        key: ${{ secrets.SH_SSH_KEY }}
        source: 'docker-compose.yaml'
        target: '~/docker-compose.yaml'

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SH_SSH_HOST }}
        username: ec2-user
        key: ${{ secrets.SH_SSH_KEY }}
        script: |
            docker-compose -f ~/docker-compose.yml up -d
